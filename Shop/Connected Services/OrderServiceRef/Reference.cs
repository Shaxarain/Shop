//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Shop.OrderServiceRef {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="OrderServiceRef.IOrderContractOf_OrderData")]
    public interface IOrderContractOf_OrderData {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/GetAll", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/GetAllResponse")]
        WCFContracts.DataContracts.OrderData[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/GetAll", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/GetAllResponse")]
        System.Threading.Tasks.Task<WCFContracts.DataContracts.OrderData[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/Get", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/GetResponse")]
        WCFContracts.DataContracts.OrderData Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/Get", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/GetResponse")]
        System.Threading.Tasks.Task<WCFContracts.DataContracts.OrderData> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/GetPage", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/GetPageResponse")]
        WCFContracts.DataContracts.ProductsViewModel GetPage(int page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/GetPage", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/GetPageResponse")]
        System.Threading.Tasks.Task<WCFContracts.DataContracts.ProductsViewModel> GetPageAsync(int page);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/Create", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/CreateResponse")]
        void Create(WCFContracts.DataContracts.OrderData item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/Create", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(WCFContracts.DataContracts.OrderData item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/Update", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/UpdateResponse")]
        void Update(WCFContracts.DataContracts.OrderData item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/Update", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(WCFContracts.DataContracts.OrderData item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/Delete", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/DeleteResponse")]
        void Delete(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/Delete", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/GetTerritory", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/GetTerritoryResponse")]
        WCFContracts.DataContracts.TerritoryData[] GetTerritory();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IOrderContractOf_OrderData/GetTerritory", ReplyAction="http://tempuri.org/IOrderContractOf_OrderData/GetTerritoryResponse")]
        System.Threading.Tasks.Task<WCFContracts.DataContracts.TerritoryData[]> GetTerritoryAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IOrderContractOf_OrderDataChannel : Shop.OrderServiceRef.IOrderContractOf_OrderData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class OrderContractOf_OrderDataClient : System.ServiceModel.ClientBase<Shop.OrderServiceRef.IOrderContractOf_OrderData>, Shop.OrderServiceRef.IOrderContractOf_OrderData {
        
        public OrderContractOf_OrderDataClient() {
        }
        
        public OrderContractOf_OrderDataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public OrderContractOf_OrderDataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderContractOf_OrderDataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public OrderContractOf_OrderDataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCFContracts.DataContracts.OrderData[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<WCFContracts.DataContracts.OrderData[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public WCFContracts.DataContracts.OrderData Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<WCFContracts.DataContracts.OrderData> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public WCFContracts.DataContracts.ProductsViewModel GetPage(int page) {
            return base.Channel.GetPage(page);
        }
        
        public System.Threading.Tasks.Task<WCFContracts.DataContracts.ProductsViewModel> GetPageAsync(int page) {
            return base.Channel.GetPageAsync(page);
        }
        
        public void Create(WCFContracts.DataContracts.OrderData item) {
            base.Channel.Create(item);
        }
        
        public System.Threading.Tasks.Task CreateAsync(WCFContracts.DataContracts.OrderData item) {
            return base.Channel.CreateAsync(item);
        }
        
        public void Update(WCFContracts.DataContracts.OrderData item) {
            base.Channel.Update(item);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(WCFContracts.DataContracts.OrderData item) {
            return base.Channel.UpdateAsync(item);
        }
        
        public void Delete(int id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(int id) {
            return base.Channel.DeleteAsync(id);
        }
        
        public WCFContracts.DataContracts.TerritoryData[] GetTerritory() {
            return base.Channel.GetTerritory();
        }
        
        public System.Threading.Tasks.Task<WCFContracts.DataContracts.TerritoryData[]> GetTerritoryAsync() {
            return base.Channel.GetTerritoryAsync();
        }
    }
}
